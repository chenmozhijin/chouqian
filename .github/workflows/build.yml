name: build chouqian

on:
    push:
        branches: main
        paths:
            - "**.py"
            - ".github/workflows/build.yml"
    workflow_dispatch:
        


jobs:

    build:
        strategy:
            fail-fast: false
            matrix:
                os: [windows-latest]
                arch: [x64]

        runs-on: ${{ matrix.os }}
        
        steps:
            - uses: actions/checkout@v4

            - uses: actions/setup-python@v5
              with:
                python-version: 3.11
                architecture: ${{ matrix.arch }}
            
            - name: Get arch
              id: arch
              shell: bash
              run: |
                if [[ ${{ matrix.arch }} == 'x64' ]]; then
                  echo "arch=amd64" >> $GITHUB_OUTPUT
                elif [[ ${{ matrix.arch }} == 'arm64' ]]; then
                  echo "arch=arm64" >> $GITHUB_OUTPUT
                elif [[ ${{ matrix.arch }} == 'win32' ]]; then
                  echo "arch=x86" >> $GITHUB_OUTPUT
                fi

            - name: Install dependencies
              run: |
                python -m pip install --upgrade pip
                pip install -r requirements.txt
                pip install imageio
            
            - name: Install EGL/upx
              if: ${{ matrix.os == 'ubuntu-latest' }}
              run: |
                sudo apt-get update
                sudo apt-get install libegl1 upx

            - name: Install create-dmg/upx
              if: ${{ matrix.os == 'macos-latest' }}
              run: |
                brew install create-dmg upx 

            - name: Install upx/7zip
              if: ${{ matrix.os == 'windows-latest' }}
              run: |
                choco install upx 7zip -y
            
            - name: Get Information
              id: info
              shell: bash
              run: |
                echo "copyright=Copyright (C) $(python setup.py --task get_year) 沉默の金" >> $GITHUB_OUTPUT
                echo "version=$(python setup.py --task get_version)" >> $GITHUB_OUTPUT
                cat $GITHUB_OUTPUT

            - name: Build Executable
              uses: Nuitka/Nuitka-Action@main
              with:
                nuitka-version: main
                script-name: main.py
                output-file: 抽签.exe
                standalone: true
                onefile: false
                enable-plugins: pyside6
                disable-console: true
                product-name: "抽签"
                file-version: ${{ steps.info.outputs.version }}
                product-version: ${{ steps.info.outputs.version }}
                copyright: ${{ steps.info.outputs.copyright }}

                windows-icon-from-ico: "resource/icon/logo.png"
                mingw64: true


            - name: Upload dist
              if: success() || failure()
              uses: actions/upload-artifact@v4
              with:
                name: ${{ runner.os }} - ${{ matrix.arch }} Build
                path: |
                    dist/
                    build/



